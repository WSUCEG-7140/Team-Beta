# This workflow configuration sets up the environment, installs Python dependencies, runs pytest, generates the documentation using doxygen and uploads the test results, documentation as artifacts.

name: Tests and Documentation

on:
  # Trigger the workflow whenever a pull request is opened or updated
  pull_request:
    branches: [ "*" ]

jobs:
  test:
    strategy:
      matrix:
        # GitHub Actions will create separate jobs for each combination of operating system and specified Python version.
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.9]
    # Run the job on the specified operating system
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      # Use the actions/setup-python action to set up the specified Python version
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install pytest==7.3.2 
        pip install pytest-cov
        pip install pytest-html
        pip install flask

    - name: Run tests
      # Run pytest to execute tests and generate test results and coverage report
      run: pytest --html=test-results.html --cov-report html:cov-report --cov=${{github.workspace}}/Backend
        
    - name: Upload test results in HTML format
      # Upload the HTML test results as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: Test Results HTML
        path: test-results.html

    - name: Upload coverage report
      # Upload the coverage report as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: Coverage Report
        path: cov-report/
    - name: Install Doxygen (Ubuntu)
      # Install Doxygen on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y doxygen
          
    - name: Install Doxygen (macOS)
      # Install Doxygen on macOS
      if: matrix.os == 'macOS-latest'
      run: |
        brew install doxygen
        export HOMEBREW_NO_INSTALL_CLEANUP=1
        export HOMEBREW_NO_ENV_HINTS=1
            
    - name: Install Doxygen (Windows)
      # Install Doxygen on Windows
      if: matrix.os == 'windows-latest'
      run: choco install doxygen.install --yes --no-progress
    
    
    - name: Generate Documentation
      # Generate the documentation using doxygen
      run: doxygen Doxyfile
    
    - name: Upload Documentation
      # Upload the documentation as an artifact
      uses: actions/upload-artifact@v2
      with:
        name: Documentation
        path: html/
